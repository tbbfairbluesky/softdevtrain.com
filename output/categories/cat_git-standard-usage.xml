<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Development Training, LLC (Posts about Git Standard Usage)</title><link>http://www.SoftDevTrain.com/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://www.SoftDevTrain.com/categories/cat_git-standard-usage.xml"></atom:link><language>en</language><copyright>Contents Â© 2018 &lt;a href="mailto:tbb@SoftDevTrain.com"&gt;Software Development Training, LLC&lt;/a&gt; </copyright><lastBuildDate>Wed, 14 Mar 2018 20:47:53 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Revert file in a release to version in a previous release</title><link>http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html</link><dc:creator>Software Development Training, LLC</dc:creator><description>&lt;div&gt;&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html#example-situation" id="id1"&gt;Example Situation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html#steps" id="id2"&gt;Steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html#notes" id="id3"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="example-situation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html#id1"&gt;Example Situation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have a file, &lt;tt class="docutils literal"&gt;FreeSurfer/FreeSurferPipeline.sh&lt;/tt&gt;, that was released with version v3.25.0 (from branch
&lt;tt class="docutils literal"&gt;release/v3.25.0&lt;/tt&gt; that needs to be reverted to the state it was in in version v3.24.0 (branch
&lt;tt class="docutils literal"&gt;release/v3.25.0&lt;/tt&gt;. We need to use this reverted file as part of a bugfix release, v3.25.1, that
is from a branch off of &lt;tt class="docutils literal"&gt;release/v3.25.0&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="steps"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html#id2"&gt;Steps&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Checkout the release on which you are going to base the bugfix release (&lt;tt class="docutils literal"&gt;release/v3.25.0&lt;/tt&gt;)&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_011276c085a8455fa20b1e956d747945-1"&gt;&lt;/a&gt;$ git checkout release/v3.25.0
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create and checkout a new branch that is based upon the currently checked out branch&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_7aa4795c325c47b2bf9571a2d22731a2-1"&gt;&lt;/a&gt;$ git branch revert-freesurfer-6-changes
&lt;a name="rest_code_7aa4795c325c47b2bf9571a2d22731a2-2"&gt;&lt;/a&gt;$ git checkout revert-freesurfer-6-changes
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make changes in the new branch and commit them&lt;/p&gt;
&lt;p&gt;In this case, the change is to overwrite a file in the branch with the same file from another branch.
The other branch in this case is the previous release branch (&lt;tt class="docutils literal"&gt;release/v3.24.0&lt;/tt&gt;).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_539ba6b7f73f41cb99c05c0cd1cab3ea-1"&gt;&lt;/a&gt;$ git checkout *&amp;lt;other-branch&amp;gt;* *&amp;lt;file&amp;gt;*
&lt;a name="rest_code_539ba6b7f73f41cb99c05c0cd1cab3ea-2"&gt;&lt;/a&gt;$ git checkout release/v3.24.0 FreeSurfer/FreeSurferPipeline.sh
&lt;a name="rest_code_539ba6b7f73f41cb99c05c0cd1cab3ea-3"&gt;&lt;/a&gt;$ git commit -m "Reverted FreeSurfer/FreeSurferPipeline.sh to the code released with version v3.24.0"
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Verify changes&lt;/p&gt;
&lt;p&gt;See link://slug/comparing-versions-of-a-file-between-2-git-branches&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_003e0d1ffbcd456b9b804541d4375707-1"&gt;&lt;/a&gt;$ git difftool revert-freesurfer-6-changes release/v3.25.0 FreeSurfer/FreeSurferPipeline.sh
&lt;/pre&gt;&lt;p&gt;Should show changes because file has been overwritten.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html#id3"&gt;Notes&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;If the files are identical, the command will silently return, show no output, and not
start any external tool.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git</category><guid>http://www.SoftDevTrain.com/posts/revert-file-in-a-release-to-version-in-a-previous-release.html</guid><pubDate>Wed, 14 Mar 2018 20:28:00 GMT</pubDate></item><item><title>Comparing versions of a file between 2 Git Branches</title><link>http://www.SoftDevTrain.com/posts/comparing-versions-of-a-file-between-2-git-branches.html</link><dc:creator>Software Development Training, LLC</dc:creator><description>&lt;div&gt;&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/comparing-versions-of-a-file-between-2-git-branches.html#command" id="id1"&gt;Command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/comparing-versions-of-a-file-between-2-git-branches.html#notes" id="id2"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="command"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/comparing-versions-of-a-file-between-2-git-branches.html#id1"&gt;Command&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_f6b620cde2a5492bb41bc727db81c614-1"&gt;&lt;/a&gt;git diff branch1 branch2 path/to/myfile.ext
&lt;/pre&gt;&lt;p&gt;or&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_edc274c48ca44bfbb305f9e6ca7fa505-1"&gt;&lt;/a&gt;git difftool branch1 branch2 path/to/myfile.ext
&lt;/pre&gt;&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/comparing-versions-of-a-file-between-2-git-branches.html#id2"&gt;Notes&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;If the files are identical, the command will silently return, show no output, and not
start any external tool.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git</category><guid>http://www.SoftDevTrain.com/posts/comparing-versions-of-a-file-between-2-git-branches.html</guid><pubDate>Wed, 14 Mar 2018 19:52:34 GMT</pubDate></item><item><title>Update Git</title><link>http://www.SoftDevTrain.com/posts/update-git.html</link><dc:creator>Software Development Training, LLC</dc:creator><description>&lt;div&gt;&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/update-git.html#assumptions" id="id1"&gt;Assumptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/update-git.html#useful-links" id="id2"&gt;Useful Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/update-git.html#steps" id="id3"&gt;Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="assumptions"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/update-git.html#id1"&gt;Assumptions&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You are using Git from Ubuntu/Debian Linux&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="useful-links"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/update-git.html#id2"&gt;Useful Links&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/35942754/how-to-save-username-and-password-in-git"&gt;Stackoverflow question about saving credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://git-scm.com/docs/gitcredentials"&gt;Git Credentials Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="steps"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/update-git.html#id3"&gt;Steps&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Add the git-core Personal Package Archive (PPA) repository&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1e27ebfe03be48c288e5de5887b03f5b-1"&gt;&lt;/a&gt;$ sudo add-apt-repository ppa:git-core/ppa
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Download package lists for repositories and update them to get newest versions of packages&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_0b2d7b90ce1c4b36905ed622740eb146-1"&gt;&lt;/a&gt;$ sudo apt-get update
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install the latest version of git&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_b711aa7954b34efa85509bb7ea1b6454-1"&gt;&lt;/a&gt;$ sudo apt-get install git
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git</category><guid>http://www.SoftDevTrain.com/posts/update-git.html</guid><pubDate>Wed, 14 Mar 2018 18:03:35 GMT</pubDate></item><item><title>How to save remote username and password for Git</title><link>http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html</link><dc:creator>Software Development Training, LLC</dc:creator><description>&lt;div&gt;&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html#assumptions" id="id1"&gt;Assumptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html#useful-links" id="id2"&gt;Useful Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html#steps" id="id3"&gt;Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="assumptions"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html#id1"&gt;Assumptions&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You are using Git version 2.16.2 or greater&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="useful-links"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html#id2"&gt;Useful Links&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/35942754/how-to-save-username-and-password-in-git"&gt;Stackoverflow question about saving credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://git-scm.com/docs/gitcredentials"&gt;Git Credentials Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="steps"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html#id3"&gt;Steps&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Configure the &lt;em&gt;credential helper&lt;/em&gt; for the repository to be the &lt;em&gt;store&lt;/em&gt; helper&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;store&lt;/em&gt; helper stores the credentials in a user readable only file after the
credentials are supplied once.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_b829e6e4d8a2440a8740ec235136bbef-1"&gt;&lt;/a&gt;$ git config credential.helper 'store --file=/home/*my-account*/.git-credentials-WUSTL'
&lt;/pre&gt;&lt;p&gt;or&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_96cee7eba38349d0816e62c77b8c4775-1"&gt;&lt;/a&gt;$ git config credential.helper 'store --file=/home/*my-account*/.git-credentials-PERSONAL'
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Issue a command that requires the credentials&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8fbef76c931b41db9cd1c0c84d6c587b-1"&gt;&lt;/a&gt;$ git push origin --all &lt;span class="c1"&gt;# supply username and password as prompted&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;If the credentials have already been stored in the specified file, then they will be used.&lt;/p&gt;
&lt;p&gt;If the credentials have &lt;em&gt;not&lt;/em&gt; already been stored in the specified file, then the username
and password will then be stored in the specified file. Next time they are needed,
they will be retrieved from the &lt;em&gt;store&lt;/em&gt; (the file) and you will no longer need to supply them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;To reset them, you can delete the specified store file and issue a command that requires the
credentials.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git</category><guid>http://www.SoftDevTrain.com/posts/how-to-save-remote-username-and-password-for-git.html</guid><pubDate>Wed, 14 Mar 2018 17:48:35 GMT</pubDate></item><item><title>Creating a Release from a Feature Branch</title><link>http://www.SoftDevTrain.com/posts/creating-a-release-from-a-feature-branch.html</link><dc:creator>Software Development Training, LLC</dc:creator><description>&lt;div&gt;&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/creating-a-release-from-a-feature-branch.html#assumptions" id="id1"&gt;Assumptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://www.SoftDevTrain.com/posts/creating-a-release-from-a-feature-branch.html#steps" id="id2"&gt;Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="assumptions"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/creating-a-release-from-a-feature-branch.html#id1"&gt;Assumptions&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;All changes to be included in the release have been made on the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;We release from the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch by merging &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; into the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;feature release&lt;/strong&gt; (e.g. X.Y.0) gets a branch of its own off of the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="steps"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://www.SoftDevTrain.com/posts/creating-a-release-from-a-feature-branch.html#id2"&gt;Steps&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Commit all your changes on the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Merge the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch into the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; and get all conflicts resolved.&lt;/p&gt;
&lt;p&gt;This is in case any changes were made in the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch since the point at which
the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; was branched off from the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_d201e9bc59fd4efc810a1537bbd298cc-1"&gt;&lt;/a&gt;$ git checkout feature-branch
&lt;a name="rest_code_d201e9bc59fd4efc810a1537bbd298cc-2"&gt;&lt;/a&gt;$ git merge master
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Merge the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; into the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch and squash the changes into one big change set.&lt;/p&gt;
&lt;p&gt;This is to get the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; changes into the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; for use in the release and
to ensure that these changes are included in any subsequent feature change branches. (Since
feature change branches should be branches off of the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt;.) The squashing means that all the
changes for the current feature will be under one commit comment.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_18d2937fe8ad4b68b849a6109ce9e07d-1"&gt;&lt;/a&gt;$ git checkout master
&lt;a name="rest_code_18d2937fe8ad4b68b849a6109ce9e07d-2"&gt;&lt;/a&gt;$ git merge --squash feature-branch
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Fix up the &lt;tt class="docutils literal"&gt;version.txt&lt;/tt&gt; file -- make it say &lt;tt class="docutils literal"&gt;master&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_396e653c557c466abd458a503e050194-1"&gt;&lt;/a&gt;$ git_current_branch &amp;gt; version.txt
&lt;a name="rest_code_396e653c557c466abd458a503e050194-2"&gt;&lt;/a&gt;$ get add version.txt
&lt;/pre&gt;&lt;p&gt;Note: &lt;tt class="docutils literal"&gt;git_current_branch&lt;/tt&gt; should be an alias defined as:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_3171364b1ebc475c9d2ff15d02af377a-1"&gt;&lt;/a&gt;alias git_current_branch='git symbolic-ref -q HEAD --short'
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Commit all changes to the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch. This is the one commit for all of the
feature-related changes&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_8eba37d2d3834ca4a767510618bd2439-1"&gt;&lt;/a&gt;$ git commit -m "Big description of feature branch changes"
&lt;/pre&gt;&lt;p&gt;Now all the changes you made in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; are in the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Push everything to the origin (GitHub)&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_957dba1bf606440883429af4ebcf1a26-1"&gt;&lt;/a&gt;$ git push origin --all
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Remove the local &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; whose changes you've now merged and committed to the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_513a87d18d984189bea7254986567e12-1"&gt;&lt;/a&gt;$ git branch -D feature-branch
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Remove the remote &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;feature-branch&lt;/span&gt;&lt;/tt&gt; from the origin repository (GitHub)&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_fcbc16a95eea4b129f1077ce56fd71cb-1"&gt;&lt;/a&gt;$ git push origin --delete feature-branch
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a release version in a release branch&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-1"&gt;&lt;/a&gt;$ git checkout master
&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-2"&gt;&lt;/a&gt;$ git branch release/v1.7.0  &lt;span class="c1"&gt;# substitute your intended release number&lt;/span&gt;
&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-3"&gt;&lt;/a&gt;$ git checkout release/v1.7.0
&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-4"&gt;&lt;/a&gt;$ git_current_branch &amp;gt; version.txt
&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-5"&gt;&lt;/a&gt;$ git add version.txt
&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-6"&gt;&lt;/a&gt;$ git commit -m &lt;span class="s2"&gt;"Created v1.7.0"&lt;/span&gt;
&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-7"&gt;&lt;/a&gt;$ git tag -a v1.7.0 -m &lt;span class="s2"&gt;"Tagging v1.7.0"&lt;/span&gt;
&lt;a name="rest_code_5a51a112b1384ba4b8f91aa9fbf059a4-8"&gt;&lt;/a&gt;$ git push --tags origin release/v1.7.0
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Go to &lt;a class="reference external" href="https://github.com"&gt;https://github.com&lt;/a&gt;, login in, and create a release from the tag&lt;/p&gt;
&lt;p&gt;Releases --&amp;gt; Draft a new release --&amp;gt; Select tag&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Provide a Title: e.g. "Multirun ICA+fIX on 7T Retinotopy Data"&lt;/li&gt;
&lt;li&gt;Provide a Description: e.g. "This release is intended to be used for running Multirun ICA+FIX processing on 7T Retinotopy data"&lt;/li&gt;
&lt;li&gt;Publish the release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make sure you don't leave your local &lt;tt class="docutils literal"&gt;git&lt;/tt&gt; repository with the release branch checked out.&lt;/p&gt;
&lt;p&gt;You do not want to make further changes to that branch. If you are making a bugfix release (a final point release,
e.g. v1.7.1 or v1.7.2), you will create a feature/bugfix branch off o the release branch.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_fa6802741e144bed99cdd9422781f07a-1"&gt;&lt;/a&gt;$ git checkout master
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make sure all the changes in the release branch are merged into the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch and the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt;
branch is ready to use as a starting point for future changes.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_4e3616f4830b4430998cd75073043583-1"&gt;&lt;/a&gt;$ git merge release/v1.7.0 &lt;span class="c1"&gt;# substitute your release number&lt;/span&gt;
&lt;a name="rest_code_4e3616f4830b4430998cd75073043583-2"&gt;&lt;/a&gt;$ git_current_branch &amp;gt; version.txt
&lt;a name="rest_code_4e3616f4830b4430998cd75073043583-3"&gt;&lt;/a&gt;$ git add version.txt
&lt;a name="rest_code_4e3616f4830b4430998cd75073043583-4"&gt;&lt;/a&gt;$ git commit -m &lt;span class="s2"&gt;"Updated version.txt"&lt;/span&gt;
&lt;a name="rest_code_4e3616f4830b4430998cd75073043583-5"&gt;&lt;/a&gt;$ git push origin --all
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Further changes should be done in a new feature branch, not on the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git</category><category>git release</category><guid>http://www.SoftDevTrain.com/posts/creating-a-release-from-a-feature-branch.html</guid><pubDate>Wed, 14 Mar 2018 16:35:00 GMT</pubDate></item></channel></rss>